import matplotlib.pyplot as plt
import matplotlib as mpl
import pandas as pd
import numpy as np
import random
import math

a = range(0, 20, 1)
x = random.sample(a, 10)
x.sort()
y = random.sample(a, 10)

i = len(x)-1
while i != 1:
    plt.scatter(x, y, color='blue')
    vlines = np.linspace(x[0], x[i], 3)
    hlines = np.linspace(0, 20, 2)
    plt.hlines(hlines, min(vlines), max(vlines), color='green', linewidth=.75)
    plt.vlines(vlines, min(hlines), max(hlines), color='green', linewidth=.75)
    xs, ys = np.meshgrid(vlines[1:], hlines[:-1])
    plt.show()
    i = i//2
    if i==1:
        plt.scatter(x, y, color='blue')
        vlines = np.linspace(x[0], x[i*2], 3)
        hlines = np.linspace(0, 20, 2)
        plt.hlines(hlines, min(vlines), max(vlines), color='green', linewidth=.75)
        plt.vlines(vlines, min(hlines), max(hlines), color='green', linewidth=.75)
        xs, ys = np.meshgrid(vlines[1:], hlines[:-1])
        if x[1] <= (x[0]+x[2])//2:
            min_d = math.sqrt(pow((x[0]-x[1]), 2)+pow((y[0]-y[1]),2))
            plt.plot([x[0], x[1]], [y[0], y[1]], color='red', linewidth=.50)
            plt.show()
            plt.scatter(x, y, color='blue')
            vlines = np.linspace(x[0], x[i * 2], 3)
            hlines = np.linspace(0, 20, 2)
            plt.hlines(hlines, min(vlines), max(vlines), color='green', linewidth=.75)
            plt.vlines(vlines, min(hlines), max(hlines), color='green', linewidth=.75)
            xs, ys = np.meshgrid(vlines[1:], hlines[:-1])
            d1 = math.sqrt(pow((x[0] - x[2]), 2) + pow((y[0] - y[2]), 2))
            plt.plot([x[0], x[1]], [y[0], y[1]], color='red', linewidth=.50)
            plt.plot([x[0], x[2]], [y[0], y[2]], color='red', linewidth=.50)
            plt.show()
            if d1 < min_d:
                min_d = d1
                plt.scatter(x, y, color='blue')
                vlines = np.linspace(x[0], x[i * 2], 3)
                hlines = np.linspace(0, 20, 2)
                plt.hlines(hlines, min(vlines), max(vlines), color='green', linewidth=.75)
                plt.vlines(vlines, min(hlines), max(hlines), color='green', linewidth=.75)
                xs, ys = np.meshgrid(vlines[1:], hlines[:-1])
                plt.plot([x[0], x[2]], [y[0], y[2]], color='red', linewidth=.50)
                plt.show()
            else:
                plt.scatter(x, y, color='blue')
                vlines = np.linspace(x[0], x[i * 2], 3)
                hlines = np.linspace(0, 20, 2)
                plt.hlines(hlines, min(vlines), max(vlines), color='green', linewidth=.75)
                plt.vlines(vlines, min(hlines), max(hlines), color='green', linewidth=.75)
                xs, ys = np.meshgrid(vlines[1:], hlines[:-1])
                d2 = math.sqrt(pow((x[1] - x[2]), 2) + pow((y[1] - y[2]), 2))
                plt.plot([x[0], x[1]], [y[0], y[1]], color='red', linewidth=.50)
                plt.show()
    
            plt.scatter(x, y, color='blue')
            vlines = np.linspace(x[0], x[i * 2], 3)
            hlines = np.linspace(0, 20, 2)
            plt.hlines(hlines, min(vlines), max(vlines), color='green', linewidth=.75)
            plt.vlines(vlines, min(hlines), max(hlines), color='green', linewidth=.75)
            xs, ys = np.meshgrid(vlines[1:], hlines[:-1])
            d2 = math.sqrt(pow((x[1] - x[2]), 2) + pow((y[1] - y[2]), 2))
            plt.plot([x[0], x[1]], [y[0], y[1]], color='red', linewidth=.50)
            plt.plot([x[2], x[1]], [y[2], y[1]], color='red', linewidth=.50)
            plt.show()
            if d2 < min_d:
                min_d = d2
                plt.scatter(x, y, color='blue')
                vlines = np.linspace(x[0], x[i * 2], 3)
                hlines = np.linspace(0, 20, 2)
                plt.hlines(hlines, min(vlines), max(vlines), color='green', linewidth=.75)
                plt.vlines(vlines, min(hlines), max(hlines), color='green', linewidth=.75)
                xs, ys = np.meshgrid(vlines[1:], hlines[:-1])
                plt.plot([x[1], x[2]], [y[1], y[2]], color='red', linewidth=.50)
                plt.show()
            else:
                plt.scatter(x, y, color='blue')
                vlines = np.linspace(x[0], x[i * 2], 3)
                hlines = np.linspace(0, 20, 2)
                plt.hlines(hlines, min(vlines), max(vlines), color='green', linewidth=.75)
                plt.vlines(vlines, min(hlines), max(hlines), color='green', linewidth=.75)
                xs, ys = np.meshgrid(vlines[1:], hlines[:-1])
                d2 = math.sqrt(pow((x[1] - x[2]), 2) + pow((y[1] - y[2]), 2))
                plt.plot([x[0], x[1]], [y[0], y[1]], color='red', linewidth=.50)
                plt.show()
        else:
            min_d = math.sqrt(pow((x[1] - x[2]), 2) + pow((y[1] - y[2]), 2))
            plt.plot([x[2], x[1]], [y[2], y[1]], color='red', linewidth=.50)
            plt.show()
            plt.scatter(x, y, color='blue')
            vlines = np.linspace(x[0], x[i * 2], 3)
            hlines = np.linspace(0, 20, 2)
            plt.hlines(hlines, min(vlines), max(vlines), color='green', linewidth=.75)
            plt.vlines(vlines, min(hlines), max(hlines), color='green', linewidth=.75)
            xs, ys = np.meshgrid(vlines[1:], hlines[:-1])
            d1 = math.sqrt(pow((x[0] - x[2]), 2) + pow((y[0] - y[2]), 2))
            plt.plot([x[1], x[2]], [y[1], y[2]], color='red', linewidth=.50)
            plt.plot([x[0], x[2]], [y[0], y[2]], color='red', linewidth=.50)
            plt.show()
            if d1 < min_d:
                min_d = d1
                plt.scatter(x, y, color='blue')
                vlines = np.linspace(x[0], x[i * 2], 3)
                hlines = np.linspace(0, 20, 2)
                plt.hlines(hlines, min(vlines), max(vlines), color='green', linewidth=.75)
                plt.vlines(vlines, min(hlines), max(hlines), color='green', linewidth=.75)
                xs, ys = np.meshgrid(vlines[1:], hlines[:-1])
                plt.plot([x[0], x[2]], [y[0], y[2]], color='red', linewidth=.50)
                plt.show()
            else:
                plt.scatter(x, y, color='blue')
                vlines = np.linspace(x[0], x[i * 2], 3)
                hlines = np.linspace(0, 20, 2)
                plt.hlines(hlines, min(vlines), max(vlines), color='green', linewidth=.75)
                plt.vlines(vlines, min(hlines), max(hlines), color='green', linewidth=.75)
                xs, ys = np.meshgrid(vlines[1:], hlines[:-1])
                d1 = math.sqrt(pow((x[0] - x[2]), 2) + pow((y[0] - y[2]), 2))
                plt.plot([x[1], x[2]], [y[1], y[2]], color='red', linewidth=.50)
                plt.show()

            plt.scatter(x, y, color='blue')
            vlines = np.linspace(x[0], x[i * 2], 3)
            hlines = np.linspace(0, 20, 2)
            plt.hlines(hlines, min(vlines), max(vlines), color='green', linewidth=.75)
            plt.vlines(vlines, min(hlines), max(hlines), color='green', linewidth=.75)
            xs, ys = np.meshgrid(vlines[1:], hlines[:-1])
            d2 = math.sqrt(pow((x[1] - x[0]), 2) + pow((y[1] - y[0]), 2))
            plt.plot([x[0], x[1]], [y[0], y[1]], color='red', linewidth=.50)
            plt.plot([x[2], x[1]], [y[2], y[1]], color='red', linewidth=.50)
            plt.show()
            if d2 < min_d:
                min_d = d2
                plt.scatter(x, y, color='blue')
                vlines = np.linspace(x[0], x[i * 2], 3)
                hlines = np.linspace(0, 20, 2)
                plt.hlines(hlines, min(vlines), max(vlines), color='green', linewidth=.75)
                plt.vlines(vlines, min(hlines), max(hlines), color='green', linewidth=.75)
                xs, ys = np.meshgrid(vlines[1:], hlines[:-1])
                plt.plot([x[1], x[0]], [y[1], y[0]], color='red', linewidth=.50)
                plt.show()
            else:
                plt.scatter(x, y, color='blue')
                vlines = np.linspace(x[0], x[i * 2], 3)
                hlines = np.linspace(0, 20, 2)
                plt.hlines(hlines, min(vlines), max(vlines), color='green', linewidth=.75)
                plt.vlines(vlines, min(hlines), max(hlines), color='green', linewidth=.75)
                xs, ys = np.meshgrid(vlines[1:], hlines[:-1])
                d2 = math.sqrt(pow((x[1] - x[0]), 2) + pow((y[1] - y[0]), 2))
                plt.plot([x[2], x[1]], [y[2], y[1]], color='red', linewidth=.50)
                plt.show()