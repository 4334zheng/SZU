		.ORIG X3000
		BRnzp main		;
PRINT		ST R0,SAVER0		;
		ST R1,SAVER1		;
		ST R2,SAVER2		;
		ST R3,SAVER3		;
		ST R4,SAVER4		;save register
		ST R5,SAVER5		;
		ST R6,SAVER6		;
		ST R7,SAVER7		;
		
		AND R1,R1,#0		;
		ADD R1,R1,#6		;R1=6
		
		LD R5,MAP		;		
		
PRTLOOP1	AND R2,R2,#0		;
		ADD R2,R2,#6		;

PRTLOOP2	LDR R4,R5,#0		; R4=MAP[R5]
		ADD R5,R5,#1		; R5++
		ADD R0,R4,#0		;
		BRN PRTP1
		BRZ PRTSPACE		; CHOOSE PRT 
		BRP PRTP2

PRTP1		LD R0,P1
		TRAP X21
		BRNZP PRTCHECK

PRTP2		LD R0,P2
		TRAP X21
		BRNZP PRTCHECK

PRTSPACE 	LD R0,SPACE
		TRAP X21 		
		BRNZP PRTCHECK

PRTCHECK	ADD R2,R2,#-1
		BRP PRTLOOP2		;BREAK LOOP2
		LD  R0,ENDL
		TRAP X21
		ADD R1,R1,#-1		;BREAK LOOP1
		BRP PRTLOOP1
		
		LD R0,SAVER0
		LD R1,SAVER1
		LD R2,SAVER2		;RESTORE
		LD R3,SAVER3
		LD R4,SAVER4
		LD R5,SAVER5
		LD R6,SAVER6
		LD R7,SAVER7
		RET
P1		.FILL X0058
P2		.FILL X004F
SPACE		.FILL X002D

JUDGE1		AND R0,R0,#0		;
		ST R1,SAVER1		;
		ST R2,SAVER2		;
		ST R3,SAVER3		;
		ST R4,SAVER4		; save register
		ST R5,SAVER5		;
		AND R6,R6,#0		;
		ST R7,SAVER7		;

		LD  R1,MAP  		; R1 set adress
		AND R2,R2,#0
		ADD R2,R2,#6		; 6 time counter R2

NEXTLINE12	AND R3,R3,#0
		ADD R3,R3,#3		; 3 time counter R3

NEXTPOINT12	AND R4,R4,#0	
		ADD R4,R4,#4		; 4 time counter R4
		AND R5,R5,#0   		; judge counter R5 set0

LOOPCOUNT1	LDR R0,R1,#0		;
		ADD R5,R5,R0		; R5+=MAP[R1]
		ADD R1,R1,#1		; R1++
		ADD R4,R4,#-1		; R4--
		BRz NEXTPOINT11		;
		BRnzp LOOPCOUNT1	;

NEXTPOINT11	ADD R0,R5,#-4		; if counter 4
		BRz P1WIN1		;
		ADD R0,R5,#4		;
		BRz P2WIN1		;
		ADD R1,R1,#-3		;
		ADD R3,R3,#-1		;
		BRz NEXTLINE11		;
		BRnzp NEXTPOINT12	;

NEXTLINE11	ADD R2,R2,#-1		;
		BRz RESTORER1		;
		ADD R1,R1,#3		;
		BRnzp NEXTLINE12

P1WIN1		ADD R6,R6,#1		;
		BRnzp RESTORER1
P2WIN1		ADD R6,R6,#-1		;

RESTORER1	LD R1,SAVER1
		LD R2,SAVER2		
		LD R3,SAVER3
		LD R4,SAVER4
		LD R5,SAVER5
		LD R7,SAVER7
		RET


JUDGE2		AND R0,R0,#0		;
		ST R1,SAVER1		;
		ST R2,SAVER2		;
		ST R3,SAVER3		;
		ST R4,SAVER4		; save register
		ST R5,SAVER5		;
		AND R6,R6,#0		;
		ST R7,SAVER7		;
		LD  R1,MAP 		;
		AND R2,R2,#0
		ADD R2,R2,#6		; 6 time counter R2

NEXTCOLUMN22	AND R3,R3,#0		;3 time counter R3
		ADD R3,R3,#3

NEXTPOINT22	AND R4,R4,#0		;4 time counter R4
		ADD R4,R4,#4		
		AND R5,R5,#0   		;judge counter R5 set0
		
LOOPCOUNT2	LDR R0,R1,#0		;
		ADD R5,R5,R0		;
		ADD R1,R1,#6		;
		ADD R4,R4,#-1		;
		BRz NEXTPOINT21		;
		BRnzp LOOPCOUNT2	;

NEXTPOINT21	ADD R0,R5,#-4		;if counter 4
		BRz P1WIN2		;
		ADD R0,R5,#4		;
		BRz P2WIN2		;
		ADD R1,R1,#-12		;
		ADD R1,R1,#-6		;
		ADD R3,R3,#-1		;
		BRz NEXTCOLUMN21	;
		BRnzp NEXTPOINT22	;

NEXTCOLUMN21	ADD R2,R2,#-1		;
		BRz RESTORER2		;
		ADD R1,R1,#-12		;
		ADD R1,R1,#-5		;
		BRnzp NEXTCOLUMN22	;

P1WIN2		ADD R6,R6,#1		;
		BRnzp RESTORER2
P2WIN2		ADD R6,R6,#-1		;

RESTORER2	LD R1,SAVER1
		LD R2,SAVER2		
		LD R3,SAVER3
		LD R4,SAVER4
		LD R5,SAVER5
		LD R7,SAVER7
		RET

SAVER0		.FILL X0000		
SAVER1		.FILL X0000		
SAVER2		.FILL X0000		
SAVER3		.FILL X0000		
SAVER4		.FILL X0000		
SAVER5		.FILL X0000		
SAVER6		.FILL X0000		
SAVER7		.FILL X0000		
MAP 		.FILL X5000
ENDL		.FILL X000A
COL1		.FILL X501E
COL2		.FILL X501F
COL3		.FILL X5020
COL4		.FILL X5021
COL5		.FILL X5022
COL6		.FILL X5023
NEG1		.FILL XFFFF
NEG6		.FILL XFFFA
NEGMAP 		.FILL XB000

main		AND R1,R1,#0		;
		ADD R1,R1,#12		;
		ADD R1,R1,#12		;
		ADD R1,R1,#12		;

		JSR PRINT		;
STEP1		BRZ TIEGAME		;
STEP11		AND R3,R3,#0		;
		AND R2,R1,#1		;
		BRp P2IN		;
P1IN		LEA R0,P1I		;
		TRAP X22		;
		ADD R3,R3,#1		;
		BRNZP STEP2		;
P2IN		LEA R0,P2I		;
		TRAP X22		;
		ADD R3,R3,#-1		;
		
STEP2		;TRAP X20		;
		;TRAP X21		;
		TRAP X23
		ADD R2,R0,#0		;
		LD R0,ENDL		;
		TRAP X21		;

STEP3		ADD R2,R2,#-16		;
		ADD R2,R2,#-16		;
		ADD R2,R2,#-16		;
		ADD R2,R2,#-1		;
		BRN WRONG		;
		ADD R0,R2,#-5		;
		BRP WRONG		;
		BRNZP STEP4		;
WRONG		JSR PRINT		;
		LEA R0,ERROR		;
		TRAP X22		;
		BRNZP STEP11		;
		
STEP4		LEA R5,COL1		;
		ADD R5,R5,R2		;
		LDR R4,R5,#0		;
		LD  R0,NEGMAP		;
		ADD R0,R0,R4		;
		BRN WRONG		;
		STR R3,R4,#0		;
		ADD R4,R4,#-6		;
		STR R4,R5,#0		;

PRINTF		JSR PRINT		;
		
JUDGEWIN	JSR JUDGE1		;
		ADD R6,R6,#0		;
		BRN P2WIN		;
		BRP P1WIN		;
		JSR JUDGE2		;
		ADD R6,R6,#0		;
		BRN P2WIN		;
		BRP P1WIN		;
		JSR JUDGE3		;
		ADD R6,R6,#0		;
		BRN P2WIN		;
		BRP P1WIN		;
		JSR JUDGE4		;
		ADD R6,R6,#0		;
		BRN P2WIN		;
		BRP P1WIN		;
		ADD R1,R1,#-1		;
		BRNZP STEP1		;

P1WIN		LEA R0,P1W		;
		TRAP X22		;
		BRNZP ENDGAME		;
P2WIN		LEA R0,P2W		;
		TRAP X22		;
		BRNZP ENDGAME		;
TIEGAME		LEA R0,TIEG		;
		TRAP X22		;
ENDGAME		HALT			;

P1I  		.STRINGZ "Player 1,choose a column:"
P2I		.STRINGZ "Player 2,choose a column:"
P1W		.STRINGZ "Player 1 Wins.\n"
P2W		.STRINGZ "Player 2 Wins.\n"
TIEG		.STRINGZ "Tie Game.\n"
ERROR   	.STRINGZ "Invail move. Try again.\n"

SAVER00		.FILL X0000		
SAVER11		.FILL X0000		
SAVER22		.FILL X0000		
SAVER33		.FILL X0000		
SAVER44		.FILL X0000		
SAVER55		.FILL X0000		
SAVER66		.FILL X0000		
SAVER77		.FILL X0000
MAPP 		.FILL X5000

JUDGE3		AND R0,R0,#0		;
		ST R1,SAVER11		;
		ST R2,SAVER22		;
		ST R3,SAVER33		;
		ST R4,SAVER44		; save register
		ST R5,SAVER55		;
		AND R6,R6,#0		;
		ST R7,SAVER77		;
		LD  R1,MAPP  		; R1 set adress
		AND R2,R2,#0
		ADD R2,R2,#6		; 6 time counter R2

NEXT32		AND R3,R3,#0
		ADD R3,R3,#3		; 3 time counter R3

NEXTPOINT32	AND R4,R4,#0	
		ADD R4,R4,#4		; 4 time counter R4
		AND R5,R5,#0   		; judge counter R5 set0

LOOPCOUNT3	LDR R0,R1,#0		;
		ADD R5,R5,R0		; R5+=MAP[R1]
		ADD R1,R1,#7		; R1++
		ADD R4,R4,#-1		; R4--
		BRz NEXTPOINT31		;
		BRnzp LOOPCOUNT3	;

NEXTPOINT31	ADD R0,R5,#-4		; if counter 4
		BRz P1WIN3		;
		ADD R0,R5,#4		;
		BRz P2WIN3		;
		ADD R1,R1,#-7		;
		ADD R1,R1,#-7		;
		ADD R1,R1,#-7
		ADD R1,R1,#-6		;
		ADD R3,R3,#-1		;
		BRz NEXT31		;
		BRnzp NEXTPOINT32	;

NEXT31		ADD R2,R2,#-1		;
		BRz RESTORER3		;
		ADD R1,R1,#3		;
		BRnzp NEXT32

P1WIN3		ADD R6,R6,#1		;
		BRnzp RESTORER3
P2WIN3		ADD R6,R6,#-1		;

RESTORER3	LD R1,SAVER11
		LD R2,SAVER22		
		LD R3,SAVER33
		LD R4,SAVER44
		LD R5,SAVER55
		LD R7,SAVER77
		RET			;


JUDGE4		AND R0,R0,#0		;
		ST R1,SAVER11		;
		ST R2,SAVER22		;
		ST R3,SAVER33		;
		ST R4,SAVER44		; save register
		ST R5,SAVER55		;
		AND R6,R6,#0		;
		ST R7,SAVER77		;

		LD  R1,MAPP  		; R1 set adress
		ADD R1,R1,#12		;
		ADD R1,R1,#12		;
		ADD R1,R1,#6		;

		AND R2,R2,#0
		ADD R2,R2,#6		; 6 time counter R2

NEXT42		AND R3,R3,#0
		ADD R3,R3,#3		; 3 time counter R3

NEXTPOINT42	AND R4,R4,#0	
		ADD R4,R4,#4		; 4 time counter R4
		AND R5,R5,#0   		; judge counter R5 set0

LOOPCOUNT4	LDR R0,R1,#0		;
		ADD R5,R5,R0		; R5+=MAP[R1]
		ADD R1,R1,#-5		; R1++
		ADD R4,R4,#-1		; R4--
		BRz NEXTPOINT41		;
		BRnzp LOOPCOUNT4	;

NEXTPOINT41	ADD R0,R5,#-4		; if counter 4
		BRz P1WIN4		;
		ADD R0,R5,#4		;
		BRz P2WIN4		;
		ADD R1,R1,#15		;
		ADD R1,R1,#6		;
		ADD R3,R3,#-1		;
		BRz NEXT41		;
		BRnzp NEXTPOINT42	;

NEXT41		ADD R2,R2,#-1		;
		BRz RESTORER4		;
		ADD R1,R1,#-9		;
		BRnzp NEXT42

P1WIN4		ADD R6,R6,#1		;
		BRnzp RESTORER4
P2WIN4		ADD R6,R6,#-1		;

RESTORER4	LD R1,SAVER11
		LD R2,SAVER22		
		LD R3,SAVER33
		LD R4,SAVER44
		LD R5,SAVER55
		LD R7,SAVER77
		RET			;


		.END			